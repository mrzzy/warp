#
# WARP
# Devbox Ansible Role Tasks
# Install development tooling
#

- name: Register Ansible APT PPA
  become: true
  apt_repository:
    repo: "ppa:ansible/ansible"
    state: present

- name: Register NodeJS Repo
  include_tasks: register_nodejs.yaml

- name: Install development tools with APT
  become: true
  apt:
    name: "{{ item }}"
    state: present
  loop:
    # language-agnostic tools
    - "entr={{ devbox_entr_version }}"
    - "ripgrep={{ devbox_ripgrep_version }}"
    - "docker.io={{ devbox_docker_version }}"
    - "ranger={{ devbox_ranger_version }}"
    - "ansible={{ devbox_ansible_version }}"
    - "neovim={{ devbox_nvim_version }}"
    - "zsh={{ devbox_zsh_version }}"
    - "zsh-autosuggestions={{ devbox_zsh_autosuggest_version }} "
    - "zsh-syntax-highlighting={{ devbox_zsh_syntax_version }}"
    - "tmux={{ devbox_tmux_version }}"
    - "gawk={{ devbox_gawk_version }}"
    - "universal-ctags={{ devbox_universal_ctags_version }}"
    - "jq={{ devbox_jq_version }}"

    # since the version of nodejs offered by registered repo is already pegged
    # there is no need to peg the version of nodejs installed here.
    - "nodejs"

    # python & tools
    - "python3={{ devbox_python_version }}"
    - "python3-pip={{ devbox_python_pip_version }}"
    - "python3-venv={{ devbox_python_venv_version }}"
    - "python-wheel-common={{ devbox_python_wheel_version }}"

    # postgresql tools
    - "pgcli={{ devbox_pgcli_version }}"

- name: Install Python client for plugins
  pip:
    name: "pynvim=={{ devbox_nvim_pynvim_version }}"

- name: Install FZF
  vars:
    fzf_version: "{{ devbox_fzf_version }}"
  import_tasks: install_fzf.yaml

- name: Install Z Jump Tool
  become: true
  vars:
    zsh_scripts_dir: "{{ devbox_user_home }}/.local/share/zsh"
  import_tasks: install_z_jump.yaml

- name: Install tools from HashiCorp's Repository with APT"
  import_tasks: install_hashicorp.yaml


- name: Install docker-compose
  become: true
  get_url:
    url: "https://github.com/docker/compose/releases/download/\
          {{ devbox_docker_compose_version }}/docker-compose-linux-\
          {{ ansible_userspace_architecture }}"
    dest: /usr/local/bin/docker-compose
    mode: 0755

# Kubernetes Tools
- name: Install Kubectl
  become: true
  get_url:
    url: "https://dl.k8s.io/release/{{ devbox_kubectl_version }}/bin/linux/amd64/kubectl"
    dest: /usr/local/bin/kubectl
    mode: 0755

- name: Install Helm
  import_tasks: install_helm.yaml
