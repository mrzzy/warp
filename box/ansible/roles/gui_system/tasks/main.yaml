#
# WARP
# PopOS Desktop Ansible Role
# Role Tasks
#

- name: Setup Spotify APT repository
  vars:
    tmp_path: /tmp/spotify.asc
    key_path: /etc/apt/keyrings/spotify.gpg
  become: true
  block:
    - name: Register Spotify APT Package Signing Key
      ansible.builtin.get_url:
        url: https://download.spotify.com/debian/pubkey_C85668DF69375001.gpg
        dest: "{{ tmp_path }}"
        mode: "0644"
    - name: Dearmor Spotify APT Package Signing Key
      ansible.builtin.command:
        cmd: "gpg -o {{ key_path }} --dearmor {{ tmp_path }}"
        creates: "{{ key_path }}"
    - name: Add Spotify APT Package Repository
      ansible.builtin.apt_repository:
        repo:
          "deb [signed-by={{ key_path }}] https://repository.spotify.com stable non-free"
        filename: spotify
        state: present

- name: Setup Zotero APT repository
  become: true
  block:
    - name: Download Zotero repository setup script
      get_url:
        url: https://raw.githubusercontent.com/retorquere/zotero-deb/master/install.sh
        dest: /tmp/zotero-install.sh
        mode: '0755'

    - name: Run Zotero repository setup script
      command: bash /tmp/zotero-install.sh
      args:
        creates: /etc/apt/sources.list.d/zotero.sources


- name: Add GlobalProtect VPN PPA
  become: true
  ansible.builtin.apt_repository:
    repo: ppa:yuezk/globalprotect-openconnect
    state: present

- name: Install applications with APT
  become: true
  ansible.builtin.apt:
    update_cache: true
    state: present
    install_recommends: false
    name: "{{ item }}"
  loop:
    # terminal
    - alacritty
    # web browser
    - firefox
    # music
    - spotify-client
    # reference manager
    - zotero
    # flashcards
    - anki
    # vpn
    - "globalprotect-openconnect"

- name: Install Obisdian
  become: true
  apt:
    deb: https://github.com/obsidianmd/obsidian-releases/releases/download/v{{ devbox_obsidian_version }}/obsidian_{{ devbox_obsidian_version }}_amd64.deb
  when: ansible_architecture == "x86_64"

- name: Install TickTick on x86_64
  become: true
  apt:
    deb: "https://d2atcrkye2ik4e.cloudfront.net/download/linux/linux_deb_x64/ticktick-{{ devbox_ticktick_version }}-amd64.deb"
    state: present
  when: ansible_architecture == "x86_64"

- name: Install TickTick on ARM64
  become: true
  apt:
    deb: "https://d2atcrkye2ik4e.cloudfront.net/download/linux/linux_deb_arm64/ticktick-{{ devbox_ticktick_version }}-arm64.deb"
    state: present
  when: ansible_architecture == "aarch64"

- name: Register Alacritty as the default X Terminal emulator
  become: true
  community.general.alternatives:
    name: x-terminal-emulator
    link: /usr/bin/x-terminal-emulator
    path: /usr/bin/alacritty
    state: selected

- name: Install JetBrains Mono Font for Alacritty
  vars:
    jetbrains_dir: /usr/local/share/fonts/truetype/jetbrains
  block:
    - name: Create directory for JetBrains Mono Font
      become: true
      ansible.builtin.file:
        dest: "{{ jetbrains_dir }}"
        state: directory
        mode: "0755"

    - name: Install JetBrains Mono Font
      become: true
      ansible.builtin.unarchive:
        remote_src: true
        src: https://download.jetbrains.com/fonts/JetBrainsMono-2.304.zip
        dest: "{{ jetbrains_dir }}"
        creates: "{{ jetbrains_dir }}/fonts"

    - name: Rebuild Fonts cache # noqa no-changed-when
      become: true
      ansible.builtin.command: fc-cache -v -f
