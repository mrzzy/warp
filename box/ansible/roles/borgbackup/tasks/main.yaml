#
# WARP
# Borgbackup Ansible Role
# Tasks
#

- name: Install Borgbackup tools with APT
  become: true
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  loop:
    - "borgbackup={{ devbox_borgbackup_borg_version }} "
    - "borgmatic={{ devbox_borgbackup_borgmatic_version }}"

- name: Create Directories
  become: true
  ansible.builtin.file:
    state: directory
    path: "{{ item }}"
    mode: "0755"
  loop:
    - "{{ devbox_borgbackup_remote_mountpoint }}"
    - "/etc/borgmatic"

- name: Template & Install Borgmatic config files
  become: true
  ansible.builtin.template:
    src: "templates/borgmatic_{{ item }}.j2"
    dest: "/etc/borgmatic/{{ item }}"
    mode: "0700"
  loop:
    - disk.yaml
    - remote.yaml

- name: Template & Install Rclone config
  become: true
  ansible.builtin.template:
    src: "templates/rclone-backblaze.conf"
    dest: "{{ devbox_borgbackup_rclone_config }}"
    mode: "0700"

- name: Install Systemd Services
  vars:
    systemd_dir: /etc/systemd/system
  block:
    - name: Template & Install rclone-backup-mount service
      become: true
      vars:
        service: rclone-backup-mount.service
      ansible.builtin.template:
        src: "templates/{{ service }}.j2"
        dest: "{{ systemd_dir }}/{{ service }}"
        mode: "0744"
    - name: Install borgmatic-remote-backup service & timer
      become: true
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: "{{ systemd_dir }}"
        mode: "0744"
      loop:
        - files/borgmatic-remote-backup.service
        - files/borgmatic-remote-backup.timer
    - name: Reload and enable Systemd services
      become: true
      ansible.builtin.systemd:
        daemon_reload: true
        name: "{{ item }}"
        enabled: true
      loop:
        - borgmatic-remote-backup.timer
        - rclone-backup-mount.service

- name: Mount rclone-backup-mount
  become: true
  ansible.builtin.systemd:
    name: rclone-backup-mount
    state: started

- name: Create Borg Repositories
  become: true
  when: "devbox_borgbackup_create_repo"
  ansible.builtin.command:
    cmd: "borgmatic init --encryption repokey --config /etc/borgmatic/{{ item.config }}"
    creates: "{{ item.path }}/README"
  loop:
    - path: "{{ devbox_borgbackup_disk_path | mandatory }}"
      config: disk.yaml
    - path: "{{ devbox_borgbackup_remote_mountpoint | mandatory }}"
      config: remote.yaml
