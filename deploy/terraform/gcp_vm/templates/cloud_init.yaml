#cloud-config
bootcmd:
  # format warp's persisent disk with btrfs
  # verify that no fs exists on device before formatting
  - >-
    test -z "$(blkid ${warp_disk_device})" &&
      mkfs.btrfs -L warp_disk ${warp_disk_device}
  # create mountpoint for warp's persisent disk
  - mkdir -p ${mountpoint}

write_files:
# write TLS certificate & private key for the TTYD web terminal
- path: /etc/ssl/certs/ttyd.pem
  encoding: b64
  content: "${ttyd_cert_base64}"
  permissions: "0644"
- path: /etc/ssl/private/ttyd.key
  encoding: b64
  owner: root:ssl-cert
  content: "${ttyd_key_base64}"
  permissions: "0640"
# Store state within warp's persistent disk to persist across reboots
# store user's xdg cache
- path: /etc/zsh/zshenv
  append: true
  content: 'export XDG_CACHE_HOME="${mountpoint}/.cache"'
# store tmux sessions
- path: /home/mrzzy/.tmux.conf
  append: true
  content: "set -g @resurrect-dir '/home/mrzzy/disk/.tmux'"

mounts:
  # fstab entry to mount warp disk
  - ["${warp_disk_device}", "${mountpoint}", "btrfs", "defaults", "0", "2"]

runcmd:
  # create & mount btrfs subvolume to persist docker volumes in warp's persistent disk
  - systemctl stop docker
  - btrfs subvolume create ${mountpoint}/docker_volumes
  - mount -t btrfs -o subvol=docker_volumes ${warp_disk_device} /var/lib/docker/volumes
  - systemctl start docker

  # ensure warp disk is writeable by making the mrzzy user owner
  - chown -R mrzzy:mrzzy ${mountpoint}

  # symlink ~/notepad with repository stored on warp's disk
  # remove empty ~/notepad dir created by obsidian.nvim neovim plugin
  # to prevent ln command from creating the symlink as '~/notepad/notepad' instead of just '~/notepad'
  - rm -rf ~/notepad
  - ln -sf /home/mrzzy/disk/notepad ~/notepad
